#!/bin/bash
set -e

# Base directory setup
export HOME="{{ ansible_env.HOME }}"
ASDF_BASE_DIR="${HOME}/.asdf"

# ASDF environment setup
export ASDF_DIR="${ASDF_BASE_DIR}"
export PATH="${ASDF_BASE_DIR}/bin:${ASDF_BASE_DIR}/shims:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin"

# Verify ASDF availability
if ! command -v asdf >/dev/null 2>&1; then
    echo "ERROR: asdf command not found in PATH: ${PATH}" >&2
    exit 1
fi

needs_changes=false

check_plugin() {
    local plugin=$1
    local version=$2
    local scope=$3

    # Check if plugin is installed
    if ! asdf plugin list 2>/dev/null | grep -Fxq "$plugin"; then
        needs_changes=true
        return 0
    fi

    if [ "$version" = "latest" ]; then
        # For "latest", consider the plugin valid if any version is installed
        if ! asdf list "$plugin" 2>/dev/null | grep -q .; then
            needs_changes=true
            return 0
        fi
    else
        # Check if version is installed - handle asterisk in version list
        if ! asdf list "$plugin" 2>/dev/null | sed 's/^\*\?[[:space:]]*//g' | grep -Fxq "$version"; then
            needs_changes=true
            return 0
        fi

        # Check global version for global scope
        if [ "$scope" = "global" ]; then
            current_version=$(asdf current "$plugin" 2>/dev/null | awk '{print $2}' || echo "none")
            if [ "$current_version" != "$version" ]; then
                needs_changes=true
                return 0
            fi
        fi
    fi
}

# Process plugins
{% for plugin in asdf_plugins %}
check_plugin "{{ plugin.name }}" "{{ plugin.version | default('latest') }}" "{{ plugin.scope | default('global') }}"
{% endfor %}

if [ "$needs_changes" = true ]; then
    {% for plugin in asdf_plugins %}
    echo "Processing plugin: {{ plugin.name }}"

    # Add plugin if needed
    if ! asdf plugin list 2>/dev/null | grep -Fxq "{{ plugin.name }}"; then
        echo "Adding plugin: {{ plugin.name }}"
        asdf plugin add "{{ plugin.name }}"
    fi

    # Install version if needed
    echo "Installing {{ plugin.name }} version {{ plugin.version | default('latest') }}"
    asdf install {{ plugin.name }} {{ plugin.version | default('latest') }} {{ plugin.scope | default('global') }} || true

    # Set global version if needed
    if [ "{{ plugin.scope | default('global') }}" = "global" ]; then
        echo "Setting global {{ plugin.name }} version to {{ plugin.version | default('latest') }}"
        asdf global "{{ plugin.name }}" "{{ plugin.version | default('latest') }}"
    fi

    echo "Reshimming {{ plugin.name }}"
    asdf reshim "{{ plugin.name }}"
    {% endfor %}

    echo "CHANGED: Updates were applied"
else
    echo "OK: No changes required"
fi
